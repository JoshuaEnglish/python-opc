# -*- coding: utf-8 -*-
#
# unitdata.py
#
# Copyright (C) 2013 Steve Canny scanny@cisco.com
#
# This module is part of python-pptx and is released under the MIT License:
# http://www.opensource.org/licenses/mit-license.php

"""Test data builders for unit tests"""

from opc.constants import NAMESPACE as NS
from opc.oxml import oxml_fromstring


class BaseBuilder(object):
    """
    Provides common behavior for all data builders.
    """
    @property
    def element(self):
        """Return element based on XML generated by builder"""
        return oxml_fromstring(self.xml)


class CT_DefaultBuilder(BaseBuilder):
    """
    Test data builder for CT_Default (Default) XML element that appears in
    `[Content_Types].xml`.
    """
    def __init__(self):
        """Establish instance variables with default values"""
        self._content_type = 'application/xml'
        self._extension = 'xml'
        self._namespace = ' xmlns="%s"' % NS.OPC_CONTENT_TYPES

    @property
    def xml(self):
        """Return Default element"""
        tmpl = '<Default%s Extension="%s" ContentType="%s"/>\n'
        return tmpl % (self._namespace, self._extension, self._content_type)


class CT_RelationshipBuilder(BaseBuilder):
    """
    Test data builder for CT_Relationship (Relationship) XML element that
    appears in .rels files
    """
    def __init__(self):
        """Establish instance variables with default values"""
        self._rId = 'rId9'
        self._reltype = 'ReLtYpE'
        self._target = 'docProps/core.xml'
        self._target_mode = None
        self._namespace = ' xmlns="%s"' % NS.OPC_RELATIONSHIPS

    @property
    def target_mode(self):
        if self._target_mode is None:
            return ''
        return ' TargetMode="%s"' % self._target_mode

    @property
    def xml(self):
        """Return Relationship element"""
        tmpl = '<Relationship%s Id="%s" Type="%s" Target="%s"%s/>\n'
        return tmpl % (self._namespace, self._rId, self._reltype,
                       self._target, self.target_mode)


def a_Default():
    """Return a CT_DefaultBuilder instance"""
    return CT_DefaultBuilder()


def a_Relationship():
    """Return a CT_RelationshipBuilder instance"""
    return CT_RelationshipBuilder()
